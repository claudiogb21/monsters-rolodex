{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/search-box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","monster","className","src","id","alt","name","email","CardList","monsters","map","SearchBox","placeholder","handleChange","type","onChange","App","searchMonsters","e","setState","searchField","target","value","state","fetch","then","response","json","users","catch","this","filteredMonsters","filter","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yUAEaA,EAAO,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACnB,OACI,sBAAKC,UAAU,iBAAf,UACI,qBAAKC,IAAG,+BAA0BF,EAAQG,GAAlC,aAAiDC,IAAKJ,EAAQK,OACtE,6BAAKL,EAAQK,OACb,4BAAIL,EAAQM,YCJXC,EAAW,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACvB,OACI,qBAAKP,UAAU,YAAf,SAEQO,EAASC,KAAI,SAAAT,GAAO,OAAI,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQG,UCL9CO,G,MAAY,SAAC,GAAmC,IAAjCC,EAAgC,EAAhCA,YAAaC,EAAmB,EAAnBA,aACvC,OACE,8BACE,uBACEC,KAAK,SACLZ,UAAU,SACVU,YAAaA,EACbG,SAAUF,QCuCHG,E,kDAxCb,aAAe,IAAD,8BACZ,gBAeFC,eAAiB,SAACC,GAEhB,EAAKC,SAAS,CACZC,YAAaF,EAAEG,OAAOC,SAhBxB,EAAKC,MAAQ,CACXd,SAAU,GACVW,YAAa,IALH,E,qDASd,WAAqB,IAAD,OAClBI,MAAM,8CACHC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAI,EAAKT,SAAS,CAAEV,SAAUmB,OACxCC,U,oBAUL,WAAU,IAAD,EAC2BC,KAAKP,MAA/Bd,EADD,EACCA,SAAUW,EADX,EACWA,YACZW,EAAmBtB,EAASuB,QAAO,SAAA/B,GAAO,OAAIA,EAAQK,KAAK2B,cAAcC,SAASd,EAAYa,kBAEpG,OACE,sBAAK/B,UAAU,MAAf,UACE,kDACA,cAAC,EAAD,CACEU,YAAY,kBACZC,aAAciB,KAAKb,iBAErB,cAAC,EAAD,CAAUR,SAAUsB,W,GApCVI,aCMHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBb,MAAK,YAAkD,IAA/Cc,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.c2ed397a.chunk.js","sourcesContent":["import './card.style.css';\r\n\r\nexport const Card = ({ monster }) => {\r\n    return (\r\n        <div className='card-container'>\r\n            <img src={`https://robohash.org/${monster.id}?set=set2`} alt={monster.name} />\r\n            <h3>{monster.name}</h3>\r\n            <p>{monster.email}</p>\r\n        </div>\r\n    )\r\n}\r\n","import './card-list.style.css';\r\nimport { Card } from '../card/card.component';\r\n\r\nexport const CardList = ({ monsters }) => {\r\n    return (\r\n        <div className='card-list'>\r\n            {\r\n                monsters.map(monster => <Card key={monster.id} monster={monster} />)\r\n            }\r\n        </div>\r\n    )\r\n}\r\n","import './search-box.style.css';\r\n\r\nexport const SearchBox = ({ placeholder, handleChange }) => {\r\n  return (\r\n    <div>\r\n      <input\r\n        type=\"search\"\r\n        className=\"search\"\r\n        placeholder={placeholder}\r\n        onChange={handleChange}\r\n      />\r\n    </div>\r\n  )\r\n}\r\n","import { Component } from 'react';\nimport './App.css';\n\nimport { CardList } from './components/card-list/card-list.component'\nimport { SearchBox } from './components/search-box/search-box.component'\n\nclass App extends Component {\n\n  constructor() {\n    super();\n\n    this.state = {\n      monsters: [],\n      searchField: ''\n    }\n  }\n\n  componentDidMount() {\n    fetch('https://jsonplaceholder.typicode.com/users')\n      .then(response => response.json())\n      .then(users => this.setState({ monsters: users }))\n      .catch()\n  }\n\n  searchMonsters = (e) => {\n    // This is asynchronous\n    this.setState({\n      searchField: e.target.value\n    })\n  }\n\n  render() {\n    const { monsters, searchField } = this.state;\n    const filteredMonsters = monsters.filter(monster => monster.name.toLowerCase().includes(searchField.toLowerCase()));\n\n    return (\n      <div className=\"App\">\n        <h1>Monsters Rolodex</h1>\n        <SearchBox\n          placeholder=\"Search Monsters\"\n          handleChange={this.searchMonsters}\n        />\n        <CardList monsters={filteredMonsters} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}